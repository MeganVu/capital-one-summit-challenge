{"version":3,"sources":["components/Header.js","components/Footer.js","components/Webcams.js","components/Card.js","components/Cardlist.js","components/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","PureComponent","Footer","Webcams","props","parkCode","useState","isLoaded","setLoaded","image","useEffect","getImg","text","a","console","log","axios","get","params","api_key","images","length","map","img","entry","src","url","alt","Card","item","fullName","states","Cardlist","results","data","parks","state","id","Searchbar","searchText","setSearchText","setState","onSearch","q","prevState","onChange","event","target","value","onKeyPress","key","type","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710fab2f.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\n\r\n// header - contains title of site\r\nexport class Header extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"header is-size-3\">\r\n        <h1>Park Trip Planner!</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"bulma/css/bulma.min.css\";\r\n\r\n// footer\r\nexport class Footer extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <p>made with uwu &#10084; by Megan Vu</p>\r\n        <p>powered by the National Park Service API</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","// This component is used to retrieve and display webcam images for each individual search result.\r\n// This is done by passing in the park code from a specific result Card\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"bulma/css/bulma.min.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Webcams(props) {\r\n  const { parkCode } = props;\r\n  const [isLoaded, setLoaded] = useState(false);\r\n  const [image, setImage] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    // method that uses the given API call to get webcam images\r\n    // for each park, the park code is passed in to retrieve the set of all webcam images for that park\r\n    const getImg = async (text) => {\r\n      console.log(parkCode);\r\n      const images = await axios.get(\r\n        \"https://developer.nps.gov/api/v1/webcams\",\r\n        {\r\n          params: {\r\n            parkCode: parkCode,\r\n            api_key: \"thWRqZEgwYO6QHLcPo3JpLYLJtoGmoMcXc0Y48HB\",\r\n          },\r\n        }\r\n      );\r\n      setLoaded(true);\r\n      const image = images?.images;\r\n      console.log(image);\r\n      console.log(isLoaded);\r\n    };\r\n    // call method to retrieve webcam information\r\n    getImg();\r\n  }, [parkCode]);\r\n\r\n  // display webcam images in the search result\r\n  if (!isLoaded) {\r\n    return <h4>Loading...</h4>;\r\n  } else if (image.length === 0) {\r\n    return (\r\n      <div>\r\n        <p>There are no images available for this park.</p>\r\n      </div>\r\n    );\r\n  } else if (image.length === 1 && image[0].images.length === 0) {\r\n    return (\r\n      <div>\r\n        <p>There are no images available for this park.</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        {image.map((img) => {\r\n          return img.images.map((entry) => {\r\n            return <img src={entry.url} alt=\"\" />;\r\n          });\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This component is used to display each individual search result.\r\n// props are passed in from Cardlist, since that is where the API call is filtered and processed.\r\nimport React from \"react\";\r\nimport \"bulma/css/bulma.min.css\";\r\n\r\nimport Webcams from \"./Webcams.js\";\r\n\r\nexport default function Card(props) {\r\n  const { item } = props;\r\n  console.log(item.images)\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-image\">\r\n        <figure className=\"is-centered\">\r\n          <Webcams parkCode={item.parkCode} />\r\n          <img src=\"\" alt={item.fullName} />\r\n          <div className=\"card-content\">\r\n            <header>Name: {item.fullName}</header>\r\n            <span>State: {item.states}</span>\r\n          </div>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This component is used to display a list of individual search results.\r\n// It takes in the results from the 'activities/parks' API call and filters out the necessary information to display in the search results.\r\nimport React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"bulma/css/bulma.min.css\";\r\n\r\nexport default function Cardlist({ results }) {\r\n  let data = [];\r\n  if (results.data) {\r\n    data = results.data.data[0].parks || [];\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {data.map((item) => (\r\n        <Card\r\n          key={item.fullName}\r\n          state={item.states}\r\n          id={item.parkCode}\r\n          item={item}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","// This component is used to display the search bar and process the queries that go into it.\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cardlist from \"./Cardlist\";\r\n\r\nexport default function Searchbar(props) {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    results: [],\r\n  });\r\n  // This is used to change the text query stored when the user changes their input.\r\n  const handleChange = (event) => {\r\n    const text = event.target.value;\r\n    setSearchText(text);\r\n  };\r\n\r\n  // This is used to call the method that makes the API call\r\n  const handleSubmit = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  // This method is used to make the API call. It uses the given call to retrieve the parks that offer a certain activity.\r\n  // The query passed in is used to filter the list of all parks.\r\n  const onSearch = async (text) => {\r\n    const results = await axios.get(\r\n      \"https://developer.nps.gov/api/v1/activities/parks\",\r\n      {\r\n        params: {\r\n          q: text,\r\n          api_key: \"thWRqZEgwYO6QHLcPo3JpLYLJtoGmoMcXc0Y48HB\",\r\n        },\r\n      }\r\n    );\r\n\r\n    setState((prevState) => {\r\n      return { ...prevState, results: results };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"control\">\r\n      <input\r\n        className=\"input\"\r\n        onChange={handleChange}\r\n        onKeyPress={handleSubmit}\r\n        value={searchText}\r\n        type=\"text\"\r\n        placeholder=\"Enter an activity...\"\r\n      />\r\n      <Cardlist results={state.results} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport Footer from \"./components/Footer.js\";\nimport Searchbar from \"./components/Searchbar.js\";\nimport \"bulma/css/bulma.min.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"container searchApp\">\n        <h2 className=\"title is-2 has-text-centered is-size-4\">\n          Got activity ideas for your trip? Find parks that support them!\n        </h2>\n        <Searchbar />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}